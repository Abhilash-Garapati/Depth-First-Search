class Solution 
{
    public static ArrayList<Integer> findOrder(int n, int[][] arr) 
    {
        //code here
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        ArrayList<Integer> res = new ArrayList<>();
        for(int i = 0;i<n;i++)
        {
            adj.add(new ArrayList<>());
        }
        for(int i = 0;i<arr.length;i++)
        {
            adj.get(arr[i][0]).add(arr[i][1]);
        }
        boolean vis[] = new boolean[n];
        for(int i = 0;i<adj.size();i++)
        {
            if(!vis[i])
            {
                dfs(i,vis,adj,res);
            }
        }
        return res;
    }
    public static void dfs(int i,boolean vis[],ArrayList<ArrayList<Integer>> adj,ArrayList<Integer> res)
    {
        vis[i] = true;
        for(Integer node : adj.get(i))
        {
            if(!vis[node])
            {
                dfs(node,vis,adj,res);
            }
        }
        res.add(i);
    }
}
